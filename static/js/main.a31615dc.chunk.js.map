{"version":3,"sources":["App.tsx","no-geniza.ts","reportWebVitals.ts","index.tsx"],"names":["ButtonType","ALEPH","LAMED","YUD","HEY","VAV","REGEXP_NIKKUD_AND_CANTILLATION_RANGE_EXCLUDING_SOF_PASUK","start","end","excluded","excluding","String","fromCodePoint","codePointAt","regexRange","like","word","RegExp","split","map","l","join","SplitLayout","children","className","StackSize","Button","onClick","type","Stack","size","md","TextArea","React","forwardRef","ref","value","onChange","disabled","placeholder","dir","test","style","width","height","fontSize","maxWidth","boxSizing","background","border","resize","outline","Centered","display","justifyContent","App","useState","input","setInput","recentlyCopiedToClipboard","setRecentlyCopiedToClipboard","copiedToClipboardTimer","useRef","inputArea","useEffect","current","focus","processed","replace","match","padding","xl","position","top","right","left","zIndex","step","href","borderRadius","overflow","boxShadow","borderRight","action","clearTimeout","navigator","clipboard","writeText","then","setTimeout","color","transform","alignItems","src","process","filter","marginLeft","fontWeight","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a31615dc.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport noGeniza from './no-geniza'\n\nconst SplitLayout: React.FC<{}> = ({ children }) => {\n  return <div className=\"SplitLayout\">{children}</div>\n}\n\nenum ButtonType {\n  action = 'action',\n}\n\nconst Button: React.FC<{ onClick(): void; type: ButtonType }> = ({\n  children,\n  onClick,\n  type,\n}) => {\n  return (\n    <button className={`Button ${type}`} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nenum StackSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nconst Stack: React.FC<{ size?: StackSize }> = ({\n  children,\n  size = StackSize.md,\n}) => {\n  return <div className={`stack ${size}`}>{children}</div>\n}\n\ninterface TextAreaProps {\n  value: string\n  onChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\n  disabled?: boolean\n  placeholder?: string\n}\n\nconst TextArea = React.forwardRef<HTMLTextAreaElement, TextAreaProps>(\n  ({ value, onChange, disabled, placeholder }, ref) => {\n    return (\n      <textarea\n        ref={ref}\n        dir={/[א-ת]/.test(value[0]) ? 'rtl' : 'ltr'}\n        placeholder={placeholder}\n        style={{\n          width: '100%',\n          height: '10em',\n          fontSize: '1.5rem',\n          maxWidth: '100%',\n          boxSizing: 'border-box',\n          background: 'none',\n          border: 'none',\n          resize: 'none',\n          outline: 'none',\n        }}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    )\n  }\n)\n\nconst Centered: React.FC<{}> = ({ children }) => (\n  <div style={{ display: 'flex', justifyContent: 'center' }}>{children}</div>\n)\n\nfunction App() {\n  const [input, setInput] = React.useState('')\n  const [\n    recentlyCopiedToClipboard,\n    setRecentlyCopiedToClipboard,\n  ] = React.useState(false)\n  const copiedToClipboardTimer = React.useRef<\n    ReturnType<typeof window.setTimeout>\n  >()\n  const inputArea = React.useRef<HTMLTextAreaElement | null>(null)\n\n  React.useEffect(() => {\n    inputArea.current?.focus()\n  }, [])\n\n  const processed = noGeniza(input)\n\n  return (\n    <div style={{ padding: '2em' }}>\n      <Stack size={StackSize.xl}>\n        <div\n          style={{\n            width: '100%',\n            height: '25rem',\n            background: 'hsla(0, 0%, 0%, 0.05)',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            left: 0,\n            zIndex: -1,\n          }}\n        />\n        <Stack>\n          <h1>No Geniza</h1>\n          <ol>\n            {[\n              `Paste source text that might contain holy names that would require geniza.`,\n              `Copy the result to your clipboard.`,\n              `Paste into your document. Now feel free to print it without worrying. Great for printing source sheets for a d'var Torah.`,\n            ].map((step) => (\n              <li key={step}>{step}</li>\n            ))}\n          </ol>\n          <em>\n            <a href=\"https://en.wikipedia.org/wiki/Genizah\">\n              <strong>{`\"Geniza\" on Wikipedia`}</strong>\n            </a>\n          </em>\n        </Stack>\n\n        <div\n          style={{\n            borderRadius: '6px',\n            overflow: 'hidden',\n            width: '100%',\n            boxShadow: '0 1px 4px hsla(0, 0%, 0%, 0.3)',\n            border: '1px solid hsla(0, 0%, 0%, 0.1)',\n            background: 'white',\n          }}\n        >\n          <SplitLayout>\n            <div\n              style={{\n                borderRight: '1px solid hsla(0, 0%, 0%, 0.15)',\n                padding: '1.5em',\n                background: 'hsla(0, 0%, 0%, 0.05)',\n              }}\n            >\n              <TextArea value={processed} disabled />\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Button\n                  type={ButtonType.action}\n                  onClick={() => {\n                    copiedToClipboardTimer.current &&\n                      clearTimeout(copiedToClipboardTimer.current)\n\n                    navigator.clipboard.writeText(processed).then(() => {\n                      setRecentlyCopiedToClipboard(true)\n                      copiedToClipboardTimer.current = setTimeout(() => {\n                        setRecentlyCopiedToClipboard(false)\n                      }, 1500)\n                    })\n                  }}\n                >\n                  {recentlyCopiedToClipboard && (\n                    <div\n                      style={{\n                        position: 'absolute',\n                        top: '0',\n                        background: 'black',\n                        color: 'white',\n                        left: '50%',\n                        transform: 'translate(-50%, calc(-100% - 0.5em))',\n                        padding: '0.5em 0.75em',\n                        borderRadius: '4px',\n                      }}\n                    >\n                      ✓&nbsp;Copied\n                    </div>\n                  )}\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img\n                      src={`${process.env.PUBLIC_URL}/content_copy_black_24dp.svg`}\n                      height=\"16\"\n                      style={{ filter: 'invert()' }}\n                    />\n                    <p style={{ marginLeft: '0.25rem', fontWeight: 500 }}>\n                      Copy to clipboard\n                    </p>\n                  </div>\n                </Button>\n              </div>\n            </div>\n            <div style={{ padding: '1.5em' }}>\n              <TextArea\n                ref={inputArea}\n                placeholder=\"Paste (or type) source text here...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n              />\n            </div>\n          </SplitLayout>\n        </div>\n        <footer>\n          <Stack>\n            <Centered>\n              <span style={{ color: 'hsla(0, 0%, 0%, 0.5)', fontSize: '0.8rem' }}>\n                <em>\n                  Like this? You might also like{' '}\n                  <strong>\n                    <a href=\"https://tikkun.io\">tikkun.io</a>\n                  </strong>\n                  .\n                </em>\n              </span>\n            </Centered>\n            <Centered>\n              <a href=\"https://github.com/akivajgordon/no-geniza\">\n                <img\n                  src={`${process.env.PUBLIC_URL}/github.svg`}\n                  height=\"30\"\n                  style={{ filter: 'invert(0.7)' }}\n                />\n              </a>\n            </Centered>\n          </Stack>\n        </footer>\n      </Stack>\n    </div>\n  )\n}\n\nexport default App\n","const ALEPH = 'א'\nconst LAMED = 'ל'\nconst YUD = 'י'\nconst HEY = 'ה'\nconst VAV = 'ו'\nconst SOF_PASUK = '\\u05c3'\nconst UNICODE_NIKKUD_AND_CANTILLATION_START = '\\u0590'\nconst UNICODE_NIKKUD_AND_CANTILLATION_END = '\\u05cf'\n\nconst regexRange = ({\n  start,\n  end,\n  excluding,\n}: {\n  start: string\n  end: string\n  excluding: [string]\n}): string => {\n  const excluded = excluding[0]\n\n  return `[${start}-${String.fromCodePoint(\n    excluded.codePointAt(0)! - 1\n  )}${String.fromCodePoint(excluded.codePointAt(0)! + 1)}-${end}]`\n}\n\nconst REGEXP_NIKKUD_AND_CANTILLATION_RANGE_EXCLUDING_SOF_PASUK = regexRange({\n  start: UNICODE_NIKKUD_AND_CANTILLATION_START,\n  end: UNICODE_NIKKUD_AND_CANTILLATION_END,\n  excluding: [SOF_PASUK],\n})\n\nconst like = (word: string): RegExp => {\n  return new RegExp(\n    `${word\n      .split('')\n      .map(\n        (l) =>\n          `${l}${REGEXP_NIKKUD_AND_CANTILLATION_RANGE_EXCLUDING_SOF_PASUK}*`\n      )\n      .join('')}`,\n    'g'\n  )\n}\n\nexport default (s: string): string => {\n  return s\n    .replace(like([YUD, HEY, VAV, HEY].join('')), 'ה׳')\n    .replace(like([ALEPH, LAMED, HEY, YUD].join('')), (match) =>\n      match.split(LAMED).join(`-${LAMED}`)\n    )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}